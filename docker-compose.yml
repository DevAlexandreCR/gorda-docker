networks:
  backend:
  frontend:
volumes:
  postgres_data:
services:
  gorda:
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
    container_name: gorda_dock
    build:
      context: .
    networks:
      - frontend
      - backend
    ports:
      - "6000:6000"
      - "3000:3000"
    volumes:
      - ../:/root/apps
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=gorda_db
      - DB_USER=root
      - DB_PASSWORD=root123
    depends_on:
      postgres:
        condition: service_healthy
  emulators:
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    container_name: emulators
    depends_on:
      - gorda
    build:
      context: ./emulators
    networks:
      - backend
    ports:
      - "4000:4000"
      - "4400:4400"
      - "4500:4500"
      - "5005:5005"
      - "5001:5001"
      - "9000:9000"
      - "9199:9199"
      - "9099:9099"
      - "9005:9005"
      - "8080:8080"
      - "9150:9150"
    volumes:
      - ../:/home/node/firebase
  redis:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    container_name: redis
    image: redis
    networks:
      - backend
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis-data:/data
  postgres:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    container_name: postgres_db
    build:
      context: ./db
    networks:
      - backend
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
  ia:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    container_name: ia_service
    build:
      context: ./ia
    networks:
      - backend
    ports:
      - "8000:8000"
    tty: true
    volumes:
      - ../ia-app:/app
    environment:
      - PYTHONPATH=/app
      - SHELL=/bin/zsh
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=gorda_db
      - DB_USER=root
      - DB_PASSWORD=root123
    depends_on:
      postgres:
        condition: service_healthy